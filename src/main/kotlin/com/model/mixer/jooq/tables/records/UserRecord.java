/*
 * This file is generated by jOOQ.
 */
package com.model.mixer.jooq.tables.records;


import com.model.mixer.jooq.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Record2;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record13<Integer, String, String, String, Integer, String, String, Integer, String, String, LocalDateTime, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>model_mixer.user.id</code>.
     */
    public UserRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>model_mixer.user.user_name</code>. 用户名
     */
    public UserRecord setUserName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.user_name</code>. 用户名
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>model_mixer.user.password</code>. 密码
     */
    public UserRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.password</code>. 密码
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>model_mixer.user.nick_name</code>. 昵称
     */
    public UserRecord setNickName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.nick_name</code>. 昵称
     */
    public String getNickName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>model_mixer.user.role_id</code>. 角色ID
     */
    public UserRecord setRoleId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.role_id</code>. 角色ID
     */
    public Integer getRoleId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>model_mixer.user.avatar</code>.
     */
    public UserRecord setAvatar(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.avatar</code>.
     */
    public String getAvatar() {
        return (String) get(5);
    }

    /**
     * Setter for <code>model_mixer.user.phone</code>.
     */
    public UserRecord setPhone(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.phone</code>.
     */
    public String getPhone() {
        return (String) get(6);
    }

    /**
     * Setter for <code>model_mixer.user.sex</code>. true:男，false：女
     */
    public UserRecord setSex(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.sex</code>. true:男，false：女
     */
    public Integer getSex() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>model_mixer.user.idcard</code>.
     */
    public UserRecord setIdcard(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.idcard</code>.
     */
    public String getIdcard() {
        return (String) get(8);
    }

    /**
     * Setter for <code>model_mixer.user.address</code>.
     */
    public UserRecord setAddress(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.address</code>.
     */
    public String getAddress() {
        return (String) get(9);
    }

    /**
     * Setter for <code>model_mixer.user.create_time</code>. 创建时间
     */
    public UserRecord setCreateTime(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>model_mixer.user.update_time</code>. 修改时间
     */
    public UserRecord setUpdateTime(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.update_time</code>. 修改时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>model_mixer.user.delete_status</code>. 是否有效  1有效  2无效
     */
    public UserRecord setDeleteStatus(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>model_mixer.user.delete_status</code>. 是否有效  1有效  2无效
     */
    public String getDeleteStatus() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, String, String, String, Integer, String, String, Integer, String, String, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, String, String, String, Integer, String, String, Integer, String, String, LocalDateTime, LocalDateTime, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USER_NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return User.USER.NICK_NAME;
    }

    @Override
    public Field<Integer> field5() {
        return User.USER.ROLE_ID;
    }

    @Override
    public Field<String> field6() {
        return User.USER.AVATAR;
    }

    @Override
    public Field<String> field7() {
        return User.USER.PHONE;
    }

    @Override
    public Field<Integer> field8() {
        return User.USER.SEX;
    }

    @Override
    public Field<String> field9() {
        return User.USER.IDCARD;
    }

    @Override
    public Field<String> field10() {
        return User.USER.ADDRESS;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return User.USER.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return User.USER.UPDATE_TIME;
    }

    @Override
    public Field<String> field13() {
        return User.USER.DELETE_STATUS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserName();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getNickName();
    }

    @Override
    public Integer component5() {
        return getRoleId();
    }

    @Override
    public String component6() {
        return getAvatar();
    }

    @Override
    public String component7() {
        return getPhone();
    }

    @Override
    public Integer component8() {
        return getSex();
    }

    @Override
    public String component9() {
        return getIdcard();
    }

    @Override
    public String component10() {
        return getAddress();
    }

    @Override
    public LocalDateTime component11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component12() {
        return getUpdateTime();
    }

    @Override
    public String component13() {
        return getDeleteStatus();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserName();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getNickName();
    }

    @Override
    public Integer value5() {
        return getRoleId();
    }

    @Override
    public String value6() {
        return getAvatar();
    }

    @Override
    public String value7() {
        return getPhone();
    }

    @Override
    public Integer value8() {
        return getSex();
    }

    @Override
    public String value9() {
        return getIdcard();
    }

    @Override
    public String value10() {
        return getAddress();
    }

    @Override
    public LocalDateTime value11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value12() {
        return getUpdateTime();
    }

    @Override
    public String value13() {
        return getDeleteStatus();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setNickName(value);
        return this;
    }

    @Override
    public UserRecord value5(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public UserRecord value8(Integer value) {
        setSex(value);
        return this;
    }

    @Override
    public UserRecord value9(String value) {
        setIdcard(value);
        return this;
    }

    @Override
    public UserRecord value10(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public UserRecord value11(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public UserRecord value12(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public UserRecord value13(String value) {
        setDeleteStatus(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, String value3, String value4, Integer value5, String value6, String value7, Integer value8, String value9, String value10, LocalDateTime value11, LocalDateTime value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String userName, String password, String nickName, Integer roleId, String avatar, String phone, Integer sex, String idcard, String address, LocalDateTime createTime, LocalDateTime updateTime, String deleteStatus) {
        super(User.USER);

        setId(id);
        setUserName(userName);
        setPassword(password);
        setNickName(nickName);
        setRoleId(roleId);
        setAvatar(avatar);
        setPhone(phone);
        setSex(sex);
        setIdcard(idcard);
        setAddress(address);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
        setDeleteStatus(deleteStatus);
    }
}
